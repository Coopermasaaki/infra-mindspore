apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment
  namespace: xihe-new
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-perms-application.yml: "0700"
        vault.hashicorp.com/agent-inject-perms-kafka: "0700"
        vault.hashicorp.com/agent-run-as-user: "5000"
        vault.hashicorp.com/agent-inject-secret-application.yml: "internal/data/mindspore/xihe-new"
        vault.hashicorp.com/agent-inject-template-application.yml: |
          {{- with secret "internal/data/mindspore/xihe-new" -}}
          {{ .Data.data.syncrepo }}
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-kafka: "internal/data/mindspore/xihe-new"
        vault.hashicorp.com/agent-inject-template-kafka: |
          {{- with secret "internal/data/mindspore/xihe-new" -}}
          {{ .Data.data.kafka }}
          {{- end }}
        vault.hashicorp.com/agent-pre-populate-only: "true"
        vault.hashicorp.com/role: xihe-new
    spec:
      serviceAccount: xihe-new
      imagePullSecrets:
      - name: huawei-swr-image-pull-secret
      containers:
      - name: sync-repo
        args:
        - --port=8000
        - --config-file=/vault/secrets/application.yml
        - --kafkamq-config-file=/vault/secrets/kafka
        - --enable_debug=true
        image: swr.cn-north-4.myhuaweicloud.com/opensourceway/xihe/xihe:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        volumeMounts:
        - mountPath: /opt/app/workspace
          name: data-volume
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: xihe-sync-repo-pvc-sync-repo
